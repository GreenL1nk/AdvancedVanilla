def getGitCommitCount() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-list', '--count', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim().toInteger()
}

def getVersionName() {
    def commitCount = getGitCommitCount()
    def versionName = "1.${commitCount}"
    return versionName
}


plugins {
    id 'java'
    id("com.github.johnrengelman.shadow") version "8.1.1"
}

group = 'greenlink'
version getVersionName()

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "jeff-media-public"
        url = "https://hub.jeff-media.com/nexus/repository/jeff-media-public/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT"
    implementation("com.google.code.gson:gson:2.8.9")
    implementation("org.jetbrains:annotations:15.0")
    implementation("com.jeff_media:CustomBlockData:2.2.0")
    implementation("net.dv8tion:JDA:5.0.0-beta.11")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

apply from: '../AdvancedVanilla/local.build.gradle'
compileJava.options.encoding = 'UTF-8'


shadowJar {
    relocate 'com.jeff_media.customblockdata', 'greenlink.customblockdata'
}